variables:
    CONTAINER_SERVER_RELEASE_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/mgdi-api
    CONTAINER_FRONT_RELEASE_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/mgdi-web
stages:
    - build_registry

web_app_registry:
    image: docker:20.10.16
#    pull_policy: if-not-present
    tags:
        - docker
    only:
        - master
        - tags
    stage: build_registry
    script:
        - cd client
        - docker build -t $CONTAINER_FRONT_RELEASE_IMAGE .
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker push $CONTAINER_FRONT_RELEASE_IMAGE:latest
        - if [ "${CI_COMMIT_TAG}" != "" ]; then docker tag $CONTAINER_FRONT_RELEASE_IMAGE:latest $CONTAINER_FRONT_RELEASE_IMAGE:$CI_COMMIT_TAG && docker push $CONTAINER_FRONT_RELEASE_IMAGE:$CI_COMMIT_TAG ; fi

server_registry:
    image: docker:20.10.16
#    pull_policy: if-not-present
    tags:
        - docker
    only:
        - master
        - tags
    stage: build_registry
    script:
        - cd server
        - echo $CONTAINER_SERVER_RELEASE_IMAGE
        - docker build -t $CONTAINER_SERVER_RELEASE_IMAGE .
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker push $CONTAINER_SERVER_RELEASE_IMAGE:latest
        - if [ "${CI_COMMIT_TAG}" != "" ]; then docker tag $CONTAINER_SERVER_RELEASE_IMAGE:latest $CONTAINER_SERVER_RELEASE_IMAGE:$CI_COMMIT_TAG && docker push $CONTAINER_SERVER_RELEASE_IMAGE:$CI_COMMIT_TAG ; fi
