swagger: "2.0"
info:
  version: "0.0.2"
  title: Indicadores
# during dev, should point to your local machine
host: localhost:8000
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
securityDefinitions:
 Bearer:
  description: |
   O acesso a API ncecessita de um token JWT válido que deve ser passado no cabeçalho no
   campo 'Authorization'.


   Um token JWT válido é gerado pela API e retornado na resposta a rota
   /login uma vez que possua um email & senha válido.


   A seguinte sintaxe deve ser utilizada no cabeçalho das requisições 'Authorization' :

       Bearer: xxxxxx.yyyyyyy.zzzzzz
  type: apiKey
  name: Authorization
  in: header
paths:
  /login:
    x-swagger-router-controller: login
    post:
      operationId: authenticate
      tags:
        - auth
      description: |
        Permite ao usuário logar e receber um token uma vez valida a requisição
      parameters:
        -
         in: body
         name: body
         description: Informação de email/senha
         required: true
         schema:
          $ref: '#/definitions/Login'
      responses:
        '200':
         description: Login Success
         schema:
          $ref: '#/definitions/Token'
        '400':
         description: Quando o usuário não é encontrado.
         schema:
          $ref: '#/definitions/Error'
        '403':
         description: >-
          Quando usuário existe mas possui credenciais inválidas (bad credentials) OU se o usuário não puder logar
         schema:
          $ref: '#/definitions/Error'
  /version:
    x-swagger-router-controller: login
    get:
      description: versão e título da API
      operationId: version
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetVersion"
  /periodicidade:
    # our controller name
    x-swagger-router-controller: periodicidade
    get:
      description: lista de periodicidades
      operationId: list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetPeriodicidadeListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      security:
        - Bearer: []
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
  /movie/{id}:
    # our controller name
    x-swagger-router-controller: movie
    get:
      security:
        - Bearer: []
      description: get a movie
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetMovieResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


# complex objects have schema definitions
definitions:
  Login:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string
      error:
        type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  GetVersion:
    type: object
    properties:
      version: 
        type: string
      title: 
        type: string
  GetPeriodicidadeListResponse:
    required:
      - periodicidades
    properties:
      periodicidades:
        type: array
        items:
          type: object
          properties:
            codigo:
              type: number
            descricao:
              type: string
  GetMovieResponse:
    required:
      - id
      - title
      - year
    properties:
      id:
        type: string
      title:
        type: string
      year:
        type: number

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
